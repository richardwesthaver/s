#compdef shc

autoload -U is-at-least

_shc() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
":: :_shc_commands" \
"*::: :->shc" \
&& ret=0
    case $state in
    (shc)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:shc-command-$line[1]:"
        case $line[1] in
            (init)
_arguments "${_arguments_options[@]}" \
'--fmt=[config format]: :(json ron bin)' \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-f[]' \
'--force[]' \
'-d[]' \
'--db[]' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::path:' \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input:' \
&& ret=0
;;
(krypt)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input:' \
&& ret=0
;;
(clean)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input:' \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-s[system info]' \
'--sys[system info]' \
'-i[my ip]' \
'--ip[my ip]' \
'-u[usb devices]' \
'--usb[usb devices]' \
'-m[midi devices]' \
'--midi[midi devices]' \
'-w[weather report]' \
'-v[show repo status]' \
'-r[query remote for changes]' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input:' \
&& ret=0
;;
(pack)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input:' \
'::output:' \
&& ret=0
;;
(unpack)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-r[consume input package]' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input:' \
'::output:' \
&& ret=0
;;
(download)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input -- object URI:' \
&& ret=0
;;
(pull)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::input -- parent to pull from:' \
&& ret=0
;;
(push)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::to -- parent to push to:' \
&& ret=0
;;
(store)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
&& ret=0
;;
(stash)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
&& ret=0
;;
(serve)
_arguments "${_arguments_options[@]}" \
'-p+[specify packages to serve]: : ' \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::engine -- network backend:(hg dm ftp)' \
&& ret=0
;;
(build)
_arguments "${_arguments_options[@]}" \
'-p+[package to build]: : ' \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'*::target:' \
&& ret=0
;;
(x)
_arguments "${_arguments_options[@]}" \
'-x+[execute a command]: : ' \
'-m+[execute a module]: : ' \
'-s+[execute a script]: : ' \
'-i+[use the specified interpreter (dialect)]: : ' \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
'::repl:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'-c+[override configuration values]: : ' \
'--config=[override configuration values]: : ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-?[set the log level]' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_shc_commands] )) ||
_shc_commands() {
    local commands; commands=(
'init:initialize the shed' \
'edit:edit all the things' \
'krypt:blackbox' \
'clean:clean stuff up' \
'status:print basic info' \
'pack:create packages from file or directory' \
'unpack:unpack .z or .tz files' \
'download:fetch resources' \
'pull:fetch resources' \
'push:commit changes to upstream' \
'store:shared block storage' \
'stash:local storage' \
'serve:network services' \
'build:build scripts' \
'x:do things with runtimes' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'shc commands' commands "$@"
}
(( $+functions[_shc__build_commands] )) ||
_shc__build_commands() {
    local commands; commands=()
    _describe -t commands 'shc build commands' commands "$@"
}
(( $+functions[_shc__clean_commands] )) ||
_shc__clean_commands() {
    local commands; commands=()
    _describe -t commands 'shc clean commands' commands "$@"
}
(( $+functions[_shc__download_commands] )) ||
_shc__download_commands() {
    local commands; commands=()
    _describe -t commands 'shc download commands' commands "$@"
}
(( $+functions[_shc__edit_commands] )) ||
_shc__edit_commands() {
    local commands; commands=()
    _describe -t commands 'shc edit commands' commands "$@"
}
(( $+functions[_shc__help_commands] )) ||
_shc__help_commands() {
    local commands; commands=()
    _describe -t commands 'shc help commands' commands "$@"
}
(( $+functions[_shc__init_commands] )) ||
_shc__init_commands() {
    local commands; commands=()
    _describe -t commands 'shc init commands' commands "$@"
}
(( $+functions[_shc__krypt_commands] )) ||
_shc__krypt_commands() {
    local commands; commands=()
    _describe -t commands 'shc krypt commands' commands "$@"
}
(( $+functions[_shc__pack_commands] )) ||
_shc__pack_commands() {
    local commands; commands=()
    _describe -t commands 'shc pack commands' commands "$@"
}
(( $+functions[_shc__pull_commands] )) ||
_shc__pull_commands() {
    local commands; commands=()
    _describe -t commands 'shc pull commands' commands "$@"
}
(( $+functions[_shc__push_commands] )) ||
_shc__push_commands() {
    local commands; commands=()
    _describe -t commands 'shc push commands' commands "$@"
}
(( $+functions[_shc__serve_commands] )) ||
_shc__serve_commands() {
    local commands; commands=()
    _describe -t commands 'shc serve commands' commands "$@"
}
(( $+functions[_shc__stash_commands] )) ||
_shc__stash_commands() {
    local commands; commands=()
    _describe -t commands 'shc stash commands' commands "$@"
}
(( $+functions[_shc__status_commands] )) ||
_shc__status_commands() {
    local commands; commands=()
    _describe -t commands 'shc status commands' commands "$@"
}
(( $+functions[_shc__store_commands] )) ||
_shc__store_commands() {
    local commands; commands=()
    _describe -t commands 'shc store commands' commands "$@"
}
(( $+functions[_shc__unpack_commands] )) ||
_shc__unpack_commands() {
    local commands; commands=()
    _describe -t commands 'shc unpack commands' commands "$@"
}
(( $+functions[_shc__x_commands] )) ||
_shc__x_commands() {
    local commands; commands=()
    _describe -t commands 'shc x commands' commands "$@"
}

_shc "$@"